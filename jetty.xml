<?xml version="1.0"?>
<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">
 

    <!-- TODO: JNDI Configuration goes here! -->
    
<Configure id="Server" class="org.eclipse.jetty.server.Server">
  <New id="log4j" class="org.eclipse.jetty.plus.jndi.Resource">
    <Arg><Ref refid="Server"/></Arg> <!-- Scope -->
    <Arg>log4j_config_file_path</Arg> <!-- Name -->
    <Arg>
        <New class="java.lang.String">
            <!-- Set a path here that may be specific to deployment environment. -->
            <Arg>src/main/resources/log4j.properties</Arg> <!-- Value -->
        </New>
    </Arg>
  </New>
  <New id="spring" class="org.eclipse.jetty.plus.jndi.Resource">
    <Arg><Ref refid="Server"/></Arg> <!-- Scope -->
    <Arg>spring_xml_file_path</Arg> <!-- Name -->
    <Arg>
        <New class="java.lang.String">
            <!--
                Set a path here that may be specific to deployment environment.
                This allows to load different beans for test/production DB connections,
                web service configurations/ credentials etc... 
            -->
            <Arg>src/main/resources/spring.xml</Arg> <!-- Value -->
        </New>
    </Arg>
  </New>
  <!--
        Important: To run this via the run-jetty-run plugin, the
        postgres-9.3-1101-jdbc41.jar must be on the jetty classpath.
        (not just the webapp-classpath, as they are different!)
        This must be configured in the run-jetty-run run configuration
        for this plugin!
  -->
  <New id="myDataSource" class="org.eclipse.jetty.plus.jndi.Resource">
     <Arg><Ref refid="Server"/></Arg> <!-- Scope -->
     <Arg>myDataSource</Arg>
     <Arg>
        <New class="org.postgresql.ds.PGSimpleDataSource">
           <Set name="User">testuser</Set>
           <Set name="Password">testuserLogin</Set>
           <Set name="DatabaseName">testdb</Set>
           <Set name="ServerName">localhost</Set>
           <Set name="PortNumber">5432</Set>
        </New>
     </Arg>
  </New>
</Configure>
